using EasyEnglishWPF.Classes;
using EasyEnglishWPF.Patterns;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace EasyEnglishWPF.Pages
{
    /// <summary>
    /// Interaction logic for OpeenTestWindow.xaml
    /// </summary>
    public partial class OpeenTestWindow : UserControl, ISwitchable
    {
        public Test test;

        private int[] tab = RandomBash();
        private int z=0;
        private bool canNext = false;

        public OpeenTestWindow(ref User user)
        {
            InitializeComponent();
            user.CreateTest("open", "first");
            test = user.GetTest();
            questionLabel.Content = Database.LoadQuestion(tab[z]).Polish;
        }

        public void UtilizeState(object state)
        {
            throw new NotImplementedException();
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            Switcher.Switch(new Pages.MainMenu());
        }

        private void CheckBtn_Click(object sender, RoutedEventArgs e)
        {
            if (z < 10)
            {
                var xd = Database.LoadQuestion(tab[z]).English;
                if (answerBox.Text == Database.LoadQuestion(tab[z]).English)
                {
                    checkBtn.Background = Brushes.Green;
                    canNext = true;
                }
                else
                {
                    checkBtn.Background = Brushes.Red;
                }
            }
        }

        private static int[] RandomBash()
        {
            Random rnd = new Random();
            int[] tab = new int[10];
            for (int i = 0; i < 10; i++)
            {
                int x;
                do
                {
                    x = rnd.Next(1, Database.QuestionsCount());
                } while (tab.Contains(x));
                tab[i] = x;
            }

            return tab;
        }

        private void Button_Click_1(object sender, RoutedEventArgs e)
        {
            if (canNext)
            {
                canNext = false;
                questionLabel.Content = Database.LoadQuestion(tab[z++]).Polish;
            }
        }
    }
}
